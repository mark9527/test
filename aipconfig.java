package com.hsbc.rbwm.digital.amh.appname;
import org.slf4j.Logger;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.ComponentScan;import org.springframework.context.annotation.Configuration;
import com.fasterxml.jackson.databind.ObjectMapper;import com.hsbc.rbwm.digital.amh.base.LoggingUtil;import com.hsbc.rbwm.digital.amh.base.feign.FeignLogger;import com.hsbc.rbwm.digital.amh.error.feign.SystemApiErrorDecoder;
import feign.Feign;import feign.Retryer;import feign.jackson.JacksonDecoder;import feign.jackson.JacksonEncoder;
@Configuration@ComponentScan({ "com.hsbc.rbwm.digital.amh.appname" })public class ApplicationConfig { private static final String CLASSNAME = ApplicationConfig.class.getName();
 @Bean public ApiCall createApplicationCall(@Value("${apis.account-application}") String endpoint, String logPattern, ObjectMapper objectMapper, Logger apiLogger, String newLine, Retryer feignRetryer, SystemApiErrorDecoder systemApiErrorDecoder) {  final String METHODNAME = "createApplicationCall";  LoggingUtil.logEntry(CLASSNAME, METHODNAME, endpoint, objectMapper, apiLogger, systemApiErrorDecoder);  if (newLine == null) {   newLine = System.getProperty("line.separator");  }    ApiCall apiCall = (ApiCall) Feign.builder()    .decoder(new JacksonDecoder(objectMapper))    .encoder(new JacksonEncoder(objectMapper))    .errorDecoder(systemApiErrorDecoder)    .logLevel(feign.Logger.Level.FULL)    .retryer(feignRetryer)    .logger(new FeignLogger(newLine, apiLogger))    .target(ApiCall.class, endpoint);    LoggingUtil.logExit(CLASSNAME, METHODNAME, apiCall);  return apiCall; }
}
